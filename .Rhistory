summary(aquifer)
View(aquifer_sf)
View(aquifer_sf)
plot(aquifer_sf)
plot(aquifer_sf$geometry)
z <- aquifer_sf$head
summary(z)
hist(z, xlab = "piezometric-head", main = "", freq = FALSE)
lines(density(z), col = 'blue')
plot(aquifer_sf["head"], pch = 20, cex = 2, breaks = "quantile", nbreaks = 4)
View(hole)
plot(geometry)
hist(z, xlab = "piezometric-head", main = "", freq = FALSE)
lines(density(z), col = 'blue')
plot(aquifer_sf["head"], pch = 20, cex = 2, breaks = "quantile", nbreaks = 4)
punto1 <- st_point(c(1,5))
punto2 <- st_point(c(5,5))
linea <- st_linestring(matrix(c(1,1,5,1), ncol = 2, byrow = TRUE))
poligono <- st_polygon(list(matrix(c(0,0,6,0,6,6,0,6,0,0), ncol = 2, byrow = TRUE)))
hole <- st_polygon(list(matrix(c(2,2,2,4,4,4,4,2,2,2), ncol = 2, byrow = TRUE)))
geometry = st_sfc(punto1, punto2, linea, poligono, hole)
plot(geometry)
library(sf)
setwd("C:/Users/marti/Desktop/UNI/AEDD/TrabajoXeo/AEDD") # Poned vuestra ruta
load("./datos_trabajo/temp_andalu_8.RData")
### a)
head(temp_andalu)
str(temp_andalu)
summary(temp_andalu)
t <- temp_andalu$temp # asignamos a una variable la temperatura
# Histograma de la respuesta:
hist(t, xlab = "temperatura", main = "", freq = FALSE)
lines(density(t), col = 'blue')
summary(t)
# Histograma de la respuesta:
hist(t, xlab = "temperatura", main = "", freq = FALSE)
lines(density(t), col = 'blue')
crs <- +proj=utm +zone=30 +ellps=WGS84 +units=km
crs <- "+proj=utm +zone=30 +ellps=WGS84 +units=km"
temp_andalu_sf <- st_as_sf(temp_andalu, coords = c("lon", "lat"), remove = FALSE, agr = "constant", crs = crs)
temp_andalu_sf
### a)
head(temp_andalu)
# Representación de la distribución espacial de la respuesta.
plot(temp_andalu_sf["temp"], pch = 20, cex = 2, breaks = "quantile", nbreaks = 4)
x <- temp_andalu_sf$lon
y <- temp_andalu_sf$lat
old.par <- par(mfrow = c(1, 2), omd = c(0.05, 0.95, 0.01, 0.95))
plot(x, t) # lon frente a temperatura
lines(lowess(x, t), lty = 2, lwd = 2, col = 'blue')
plot(y, t) # lat frente a temperatura
lines(lowess(y, t), lty = 2, lwd = 2, col = 'blue')
# Representación de la distribución espacial de la respuesta.
plot(temp_andalu_sf["temp"], pch = 20, cex = 2, breaks = "quantile", nbreaks = 4)
x <- temp_andalu_sf$lon
y <- temp_andalu_sf$lat
old.par <- par(mfrow = c(1, 2), omd = c(0.05, 0.95, 0.01, 0.95))
plot(x, t) # lon frente a temperatura
lines(lowess(x, t), lty = 2, lwd = 2, col = 'blue')
plot(y, t) # lat frente a temperatura
lines(lowess(y, t), lty = 2, lwd = 2, col = 'blue')
temp.ols <- lm(temp ~ lon + lat, data = temp_andalu_sf)
summary(temp.ols)
res <- residuals(temp.ols)
summary(res)
hist(res, xlab = "ols residuals", main = "", freq = FALSE)
lines(density(res), col = 'blue')
par <- old.par
# Hacemos un histograma de los residuos
hist(res, xlab = "ols residuals", main = "", freq = FALSE)
lines(density(res), col = 'blue')
# Hacemos un histograma de los residuos
hist(res, xlab = "ols residuals", main = "", freq = FALSE)
lines(density(res), col = 'blue')
par(old.par)
# Hacemos un histograma de los residuos
hist(res, xlab = "ols residuals", main = "", freq = FALSE)
lines(density(res), col = 'blue')
# Hacemos un histograma de los residuos
hist(res, xlab = "ols residuals", main = "", freq = FALSE)
lines(density(res), col = 'blue')
par(mfrow = c(1,1))
# Hacemos un histograma de los residuos
hist(res, xlab = "ols residuals", main = "", freq = FALSE)
lines(density(res), col = 'blue')
library(mapSpain)
# Representación de la distribución espacial de la respuesta.
plot(temp_andalu_sf["temp"], pch = 20, cex = 2, breaks = "quantile", nbreaks = 4)
# Histograma de la respuesta:
hist(t, xlab = "temperatura", main = "", freq = FALSE)
lines(density(t), col = 'blue')
andalucia_limites <- mapSpain::getBoundaries("andalucia", level = "CA")
library(mapSpain)
andalucia_limites <- mapSpain::getBoundaries("andalucia", level = "CA")
andalucia_limites <- mapSpain::esp_get_ccaa(ccaa = "Andalucia")
plot(andalucia_limites)
ggplot(andalucia_limites)
library(ggplot2)
ggplot(andalucia_limites)
andalucia_limites <- mapSpain::esp_get_ccaa(ccaa = "Andalucia")
ggplot(andalucia_limites)
ggplot(andalucia_limites)+
geom_sf(fill = "darkgreen", color = "white") +
theme_bw()
andalucia_limites <- mapSpain::esp_get_ccaa(ccaa = "Andalucia")
ggplot(andalucia_limites)+
geom_sf(color = "white") +
theme_bw()
ggplot(andalucia_limites)+
geom_sf(color = "white")
ggplot(andalucia_limites)
ggplot(andalucia_limites, fill = NA, color = "red", lwd = 2) +
theme_minimal())
ggplot(andalucia_limites, fill = NA, color = "red", lwd = 2) +
theme_minimal()
ggplot(andalucia_limites, fill = NA, color = "red", lwd = 2) +
theme_minimal()
ggplot(andalucia_limites, fill = "transparent", color = "red", lwd = 2) +
theme_minimal()
andalucia_limites <- mapSpain::esp_get_ccaa(ccaa = "Andalucia")
ggplot(andalucia_limites, fill = "transparent", color = "red", lwd = 2) +
theme_minimal()
ggplot(andalucia_limites, fill = "transparent", color = "red", lwd = 2)
ggplot(andalucia_limites, fill = "green", color = "red", lwd = 2)
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "red", lwd = 2) +
theme_minimal()
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 2) +
theme_minimal()
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
theme_minimal()
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1)
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
plot(temp_andalu_sf["temp"], pch = 20, cex = 2, breaks = "quantile", nbreaks = 4)
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_point(data = temp_andalu_sf, aes(x = lon, y = lat, color = temp), pch = 20, size = 2)
# Representación de la distribución espacial de la respuesta.
plot(temp_andalu_sf["temp"], pch = 20, cex = 2, breaks = "quantile", nbreaks = 4)
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_point(data = temp_andalu_sf, aes(x = lon, y = lat, color = temp), pch = 20, size = 2)
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1)
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, color = temp_andalu_sf$temp)
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf$geometry, color = temp_andalu_sf$temp)
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf$geometry, color = temp_andalu_sf$temp, breaks = "quantile", nbreaks = 4)
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf$geometry, color = temp_andalu_sf$temp, pch = 10)
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf$geometry, color = temp_andalu_sf$temp, pch = 20)
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf$geometry, color = temp_andalu_sf$temp, pch = 1)
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf$geometry, color = temp_andalu_sf$temp, pch = 20)
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf$geometry, color = temp_andalu_sf$temp, pch = 20, cex = 2)
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf$geometry, color = temp_andalu_sf$temp, pch = 20, cex = 10)
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf$geometry, color = temp_andalu_sf$temp, pch = 20, cex = 5)
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf$geometry, color = temp_andalu_sf$temp, pch = 20, cex = 5) +
scale_color_gradient(breaks = 'quantile' , low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, color = temp, pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, color = aes(temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "blue", high = "red", name = "Temperature")
quantiles <- quantile(temp_andalu_sf$temp, probs = c(0, 0.25, 0.5, 0.75, 1))
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, color = aes(temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, color = temp_andalu_sf$temp, pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, color = temp_andalu_sf$temp, pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, color = temp_andalu_sf$temp, pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "blue", high = "red", name = "Temperature")+
theme_minimal()
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, color = temp_andalu_sf$temp, pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, color = temp_andalu_sf$temp, pch = 20, cex = 5) +
scale_color_gradient(breaks = 4, low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, color = aes(temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = 4, low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, color = temp_andalu_sf$temp, pch = 20, cex = 5) +
scale_color_gradient(breaks = 4, low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = c(4, 8, 12, 16), low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = 4, low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = c(4, 8, 12, 16), low = "blue", high = "red", name = "Temperature")
par(mfrow=c(2,1))
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, color = temp_andalu_sf$temp, pch = 20, cex = 5) +
scale_color_gradient(breaks = 4, low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = c(4, 8, 12, 16), low = "blue", high = "red", name = "Temperature")
par(mfrow=c(2,1))
par(mfrow=c(2,1))
par(mfrow=c(1,2))
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, color = temp_andalu_sf$temp, pch = 20, cex = 5) +
scale_color_gradient(breaks = 4, low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, color = temp_andalu_sf$temp, pch = 20, cex = 5) +
scale_color_gradient(breaks = 4, low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "blue", high = "red", name = "Temperature")
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_manual(breaks = quantiles, values = "blue", name = "Temperature")
# Creamos los cuantiles para la distribuir los colores
quantiles <- quantile(temp_andalu_sf$temp, probs = c(0, 0.25, 0.5, 0.75, 1))
# Creamos los cuantiles para la distribuir los colores
quantiles <- quantile(temp_andalu_sf$temp, probs = c(0, 0.25, 0.5, 0.75, 1))
# Hacemos el grafico usando ggplot juntando los limites de andalucía junto a
# la representación de la distribución espacial de la respuesta
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "blue", high = "red", name = "Temperature")
# Hacemos el grafico usando ggplot juntando los limites de andalucía junto a
# la representación de la distribución espacial de la respuesta
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "lightblue", high = "red", name = "Temperature")
# Hacemos el grafico usando ggplot juntando los limites de andalucía junto a
# la representación de la distribución espacial de la respuesta
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "lightblue", high = "darkblue", name = "Temperature")
# Hacemos el grafico usando ggplot juntando los limites de andalucía junto a
# la representación de la distribución espacial de la respuesta
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "lightblue", high = "darkred", name = "Temperature")
# Hacemos el grafico usando ggplot juntando los limites de andalucía junto a
# la representación de la distribución espacial de la respuesta
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "lightblue", high = "red", name = "Temperature")
# Hacemos el grafico usando ggplot juntando los limites de andalucía junto a
# la representación de la distribución espacial de la respuesta
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "blue", high = "red", name = "Temperature")
# Hacemos el grafico usando ggplot juntando los limites de andalucía junto a
# la representación de la distribución espacial de la respuesta
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "lightblue", high = "darkblue", name = "Temperature")
# Representación de la distribución espacial de la respuesta.
plot(temp_andalu_sf["temp"], pch = 20, cex = 2, breaks = "quantile", nbreaks = 4)
# Hacemos el grafico usando ggplot juntando los limites de andalucía junto a
# la representación de la distribución espacial de la respuesta
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "lightblue", high = "darkblue", name = "Temperature")
# Definimos los colores para cada cuantil
colors <- c("blue", "green", "yellow", "orange", "red")
# Hacemos el gráfico usando ggplot juntando los límites de Andalucía junto a
# la representación de la distribución espacial de la respuesta
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_manual(breaks = quantiles, values = colors, name = "Temperature")
# Hacemos el gráfico usando ggplot juntando los límites de Andalucía junto a
# la representación de la distribución espacial de la respuesta
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, color = temp_andalu_sf$temp, pch = 20, cex = 5) +
scale_color_manual(breaks = quantiles, values = colors, name = "Temperature")
# Definimos los colores para cada cuantil
colors <- c("blue", "green", "yellow", "orange", "red")
# Hacemos el gráfico usando ggplot juntando los límites de Andalucía junto a
# la representación de la distribución espacial de la respuesta
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_manual(breaks = quantiles, values = colors, name = "Temperature")
# Creamos los cuantiles para distribuir los colores
quantiles <- quantile(temp_andalu_sf$temp, probs = c(0, 0.25, 0.5, 0.75, 1))
# Definimos los colores para cada cuantil
colors <- c("blue", "green", "yellow", "orange", "red")
# Hacemos el gráfico usando ggplot juntando los límites de Andalucía junto a
# la representación de la distribución espacial de la respuesta
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(fill = cut(temp_andalu_sf$temp, breaks = quantiles)), pch = 20, cex = 5) +
scale_fill_gradientn(colors = colors, name = "Temperature", guide = "legend")
### a)
head(temp_andalu)
str(temp_andalu)
summary(temp_andalu)
# asignamos a una variable la temperatura de la que vamos a realizar una analisis descriptivo unidimensional
t <- temp_andalu$temp
summary(t)
# Histograma de la respuesta:
hist(t, xlab = "temperatura", main = "", freq = FALSE)
lines(density(t), col = 'blue')
crs <- "+proj=utm +zone=30 +ellps=WGS84 +units=km"
temp_andalu_sf <- st_as_sf(temp_andalu, coords = c("lon", "lat"), remove = FALSE, agr = "constant", crs = crs)
# Creamos los cuantiles para la distribuir los colores
quantiles <- quantile(temp_andalu_sf$temp, probs = c(0, 0.25, 0.5, 0.75, 1))
# Hacemos el grafico usando ggplot juntando los limites de andalucía junto a
# la representación de la distribución espacial de la respuesta
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "blue", high = "red", name = "Temperature")
# Representación de la distribución espacial de la respuesta.
plot(temp_andalu_sf["temp"], pch = 20, cex = 2, breaks = "quantile", nbreaks = 4)
# Hacemos el grafico usando ggplot juntando los limites de andalucía junto a
# la representación de la distribución espacial de la respuesta
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "blue", high = "red", name = "Temperature")
# Representación de la distribución espacial de la respuesta.
plot(temp_andalu_sf["temp"], pch = 20, cex = 2, breaks = "quantile", nbreaks = 4)
head(temp_andalu)
str(temp_andalu)
summary(temp_andalu)
# asignamos a una variable la temperatura de la que vamos a realizar una analisis descriptivo unidimensional
t <- temp_andalu$temp
summary(t)
# Histograma de la respuesta:
hist(t, xlab = "temperatura", main = "", freq = FALSE)
lines(density(t), col = 'blue')
# Vamos a convertir los datos a un objeto sf
crs <- "+proj=utm +zone=30 +ellps=WGS84 +units=km"
temp_andalu_sf <- st_as_sf(temp_andalu, coords = c("lon", "lat"), remove = FALSE, agr = "constant", crs = crs)
# Representación de la distribución espacial de la respuesta.
plot(temp_andalu_sf["temp"], pch = 20, cex = 2, breaks = "quantile", nbreaks = 4)
x <- temp_andalu_sf$lon
y <- temp_andalu_sf$lat
old.par <- par(mfrow = c(1, 2), omd = c(0.05, 0.95, 0.01, 0.95))
plot(x, t) # lon frente a temperatura
lines(lowess(x, t), lty = 2, lwd = 2, col = 'blue')
plot(y, t) # lat frente a temperatura
lines(lowess(y, t), lty = 2, lwd = 2, col = 'blue')
par(mfrow = c(1,1))
# Ajustamos el modelo por ols
temp.ols <- lm(temp ~ lon + lat, data = temp_andalu_sf)
summary(temp.ols)
# Analizamos los residuos
res <- residuals(temp.ols)
summary(res)
# Hacemos un histograma de los residuos
hist(res, xlab = "ols residuals", main = "", freq = FALSE)
lines(density(res), col = 'blue')
head(temp_andalu)
str(temp_andalu)
summary(temp_andalu)
# asignamos a una variable la temperatura de la que vamos a realizar una analisis descriptivo unidimensional
t <- temp_andalu$temp
summary(t)
# Histograma de la respuesta:
hist(t, xlab = "temperatura", main = "", freq = FALSE)
lines(density(t), col = 'blue')
# Vamos a convertir los datos a un objeto sf
crs <- "+proj=utm +zone=30 +ellps=WGS84 +units=km"
temp_andalu_sf <- st_as_sf(temp_andalu, coords = c("lon", "lat"), remove = FALSE, agr = "constant", crs = crs)
# Representación de la distribución espacial de la respuesta.
plot(temp_andalu_sf["temp"], pch = 20, cex = 2, breaks = "quantile", nbreaks = 4)
x <- temp_andalu_sf$lon
y <- temp_andalu_sf$lat
old.par <- par(mfrow = c(1, 2), omd = c(0.05, 0.95, 0.01, 0.95))
plot(x, t) # lon frente a temperatura
lines(lowess(x, t), lty = 2, lwd = 2, col = 'blue')
plot(y, t) # lat frente a temperatura
lines(lowess(y, t), lty = 2, lwd = 2, col = 'blue')
par(mfrow = c(1,1))
# Ajustamos el modelo por ols
temp.ols <- lm(temp ~ lon + lat, data = temp_andalu_sf)
summary(temp.ols)
# Analizamos los residuos
res <- residuals(temp.ols)
summary(res)
# Hacemos un histograma de los residuos
hist(res, xlab = "ols residuals", main = "", freq = FALSE)
lines(density(res), col = 'blue')
library(mapSpain)
library(ggplot2)
# Creamos los cuantiles para la distribuir los colores
quantiles <- quantile(temp_andalu_sf$temp, probs = c(0, 0.25, 0.5, 0.75, 1))
# Hacemos el grafico usando ggplot juntando los limites de andalucía junto a
# la representación de la distribución espacial de la respuesta
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "blue", high = "red", name = "Temperature")
View(andalucia_limites)
View(hole)
andalucia_limites
library(sf)
setwd("C:/Users/marti/Desktop/UNI/AEDD/TrabajoXeo/AEDD") # Poned vuestra ruta
load("./datos_trabajo/temp_andalu_8.RData")
head(temp_andalu)
str(temp_andalu)
summary(temp_andalu)
# asignamos a una variable la temperatura de la que vamos a realizar una analisis descriptivo unidimensional
t <- temp_andalu$temp
summary(t)
# Histograma de la respuesta:
hist(t, xlab = "temperatura", main = "", freq = FALSE)
lines(density(t), col = 'blue')
# Vamos a convertir los datos a un objeto sf
crs <- "+proj=utm +zone=30 +ellps=WGS84 +units=km"
temp_andalu_sf <- st_as_sf(temp_andalu, coords = c("lon", "lat"), remove = FALSE, agr = "constant", crs = crs)
# Representación de la distribución espacial de la respuesta.
plot(temp_andalu_sf["temp"], pch = 20, cex = 2, breaks = "quantile", nbreaks = 4)
x <- temp_andalu_sf$lon
y <- temp_andalu_sf$lat
old.par <- par(mfrow = c(1, 2), omd = c(0.05, 0.95, 0.01, 0.95))
plot(x, t) # lon frente a temperatura
lines(lowess(x, t), lty = 2, lwd = 2, col = 'blue')
plot(y, t) # lat frente a temperatura
lines(lowess(y, t), lty = 2, lwd = 2, col = 'blue')
par(mfrow = c(1,1))
# Ajustamos el modelo por ols
temp.ols <- lm(temp ~ lon + lat, data = temp_andalu_sf)
summary(temp.ols)
# Analizamos los residuos
res <- residuals(temp.ols)
summary(res)
# Hacemos un histograma de los residuos
hist(res, xlab = "ols residuals", main = "", freq = FALSE)
lines(density(res), col = 'blue')
library(mapSpain)
library(ggplot2)
andalucia_limites <- mapSpain::esp_get_ccaa(ccaa="andalucia")
# Creamos los cuantiles para la distribuir los colores
quantiles <- quantile(temp_andalu_sf$temp, probs = c(0, 0.25, 0.5, 0.75, 1))
# Hacemos el grafico usando ggplot juntando los limites de andalucía junto a
# la representación de la distribución espacial de la respuesta
ggplot() +
geom_sf(data = andalucia_limites, fill = "transparent", color = "black", lwd = 1) +
geom_sf(data = temp_andalu_sf, aes(color = temp_andalu_sf$temp), pch = 20, cex = 5) +
scale_color_gradient(breaks = quantiles, low = "blue", high = "red", name = "Temperature")
